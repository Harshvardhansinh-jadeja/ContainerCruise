name: Build and Plan

on:
  workflow_call:
    inputs:
      apply:
        required: true
        type: boolean
      build:
        required: true
        type: boolean
      infra:
        required: true
        type: boolean
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      RDS_USERNAME:
        required: true
      RDS_PASSWORD:
        required: true
      AWS_ACCOUNT_ID:
        required: true

jobs:
  Build:
    if: ${{inputs.build == true }}
    defaults:
      run:
        working-directory: ./auth

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: dev

      - name: Install NPM
        run: sudo apt update && sudo apt install npm

      - name: Install Packages
        run: npm install

      - name: Build app
        run: npm run build

  Deploy:
    if: ${{inputs.infra == true }}
    # needs: Build
    defaults:
      run:
        working-directory: ./Infrastructure
    runs-on: ubuntu-latest
    environment: dev

    env:
      ECR_REPO: "harshvardhan-repo"
      TF_VAR_ecr_repo: "harshvardhan-repo"
      TF_VAR_profile: "harsh"
      TF_VAR_region: "us-west-2"
      TF_VAR_account_id: ${{secrets.AWS_ACCESS_KEY_ID}}
      TF_VAR_username: ${{secrets.RDS_USERNAME}}
      TF_VAR_password: ${{secrets.RDS_PASSWORD}}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: dev

      #   - name: credentials on cli
      #     run: |
      #       aws configure --profile harsh set aws_access_key_id ${{secrets.AWS_ACCESS_KEY_ID}}
      #       aws configure --profile harsh set aws_secret_access_key ${{secrets.AWS_SECRET_ACCESS_KEY}}
      #       aws configure --profile harsh set region us-west-2
      #       aws configure list

      - name: credentials on cli
        run: bash ../.github/workflows/commands.sh
        env:
          AWS_REGION: "us-west-2"
          AWS_PROFILE: "harsh"
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}

      - name: install Terraform
        run: |
          wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update && sudo apt install terraform

      - name: Login to ECR
        run: docker login -u AWS -p $(aws ecr get-login-password --profile harsh --region us-west-2) ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.us-west-2.amazonaws.com

      - name: Push image to ECR
        run: |
          docker build -t containercruise ../auth
          docker tag containercruise:latest ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.$TF_VAR_region.amazonaws.com/$TF_VAR_ecr_repo:latest
          docker push  ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.$TF_VAR_region.amazonaws.com/$TF_VAR_ecr_repo:latest

      - name: initialize terraform
        run: terraform init

      - name: plan terraform
        run: terraform plan

      - name: Apply terraform
        if: ${{inputs.apply == true}}
        run: terraform apply -auto-approve
