name: Deploy Application

on:
  #   workflow_dispatch:
  push:
    branches:
      - dev
      - sandbox

jobs:
  SetEnvironment:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{env.branch}}
    steps:
      - name: Use condition
        run: |
          if [ ${{github.ref_name}} == 'dev' ]
          then 
              echo "branch=dev" >> $GITHUB_ENV
          else
              echo "branch=sandbox" >> $GITHUB_ENV
          fi

      - name: Print Branch
        run: echo ${{env.branch}}

  Deploy:
    runs-on: ubuntu-latest
    needs: SetEnvironment
    env:
      TF_VAR_environment: ${{ needs.SetEnvironment.outputs.environment }}

    environment: ${{needs.SetEnvironment.outputs.environment}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{secrets.AWS_ACCOUNT_ID}}:role/OIDC_Connect
          # role-session-name: harsh
          aws-region: us-west-2

      - name: Get Identity
        run: aws sts get-caller-identity

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: harshvardhan-repo
          IMAGE_TAG: ${{github.sha}}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG ../auth
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
