name: Pull Request


# ----------------------------------
# Optional File
# ----------------------------------

on:
  workflow_dispatch:
  # pull_request:
  #   branches:
  #     - dev
  # push:
  #   branches:
  #     - dev
  #   paths:
  #     - Infrastructure/**

jobs:
  path:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      infra: ${{ steps.filter.outputs.infra}}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            frontend:
              - 'auth/**'
            infra:
              - 'Infrastructure/**'

  Pull:
    needs: path
    uses: ./.github/workflows/reusable.yml
    with:
      apply: false
      build: ${{needs.path.outputs.frontend}}
      infra: ${{needs.path.outputs.infra}}
    secrets:
      AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      RDS_USERNAME: ${{secrets.RDS_USERNAME}}
      RDS_PASSWORD: ${{secrets.RDS_PASSWORD}}
      AWS_ACCOUNT_ID: ${{secrets.AWS_ACCOUNT_ID}}
      OIDC_ROLE : ${{secrets.OIDC_ROLE}}

  # Build:
  #   needs: path
  #   if: ${{ needs.path.outputs.frontend == 'true' }}
  #   defaults:
  #     run:
  #       working-directory: ./auth

  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         ref: dev

  #     - name: Install NPM
  #       run: sudo apt install npm

  #     - name: Install Packages
  #       run: npm install

  #     - name: Build app
  #       run: npm run build

  # Infra:
  #   needs: path
  #   if: ${{ needs.path.outputs.infra == 'true' }}
  #   defaults:
  #     run:
  #       working-directory: ./Infrastructure
  #   env:
  #     TF_VAR_profile: "harsh"
  #     TF_VAR_region: "us-west-2"
  #     TF_VAR_account_id: ${{secrets.AWS_ACCOUNT_ID}}
  #     TF_VAR_username: ${{secrets.RDS_USERNAME}}
  #     TF_VAR_password: ${{secrets.RDS_PASSWORD}}

  #   environment: dev

  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         ref: dev

  #     - name: install Terraform
  #       run: |
  #         wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
  #         echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
  #         sudo apt update && sudo apt install terraform

  #     - name: credentials on cli
  #       run: bash ../.github/workflows/commands.sh
  #       env:
  #         AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
  #         AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
  #         AWS_REGION: "us-west-2"
  #         AWS_PROFILE: "harsh"

  #     - name: initialize terraform
  #       run: terraform init

  #     - name: plan terraform
  #       run: "terraform plan"
